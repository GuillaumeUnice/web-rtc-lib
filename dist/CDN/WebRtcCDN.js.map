{"version":3,"sources":["webpack:///webpack/bootstrap 36e81f019fca1f5679b3","webpack:///./src/index.ts","webpack:///./src/WebRTCLib.ts","webpack:///./~/ws-jms-lib-echyzen/dist/index.js","webpack:///./~/ws-jms-lib-echyzen/dist/WsJMSLib.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA,uBAAsB,6BAA6B;AACnD;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,KAAI;AACJ;AACA,wFAAuF;AACvF;AACA,yC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,kBAAkB,2BAA2B,EAAE;AACxE,sBAAqB,kBAAkB,2BAA2B,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAiF,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA,wFAAuF,EAAE;AACzF,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,kBAAkB,2BAA2B,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,wFAAuF,EAAE;AACzF,UAAS,kBAAkB,oBAAoB,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC9IA;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD","file":"WebRtcCDN.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 36e81f019fca1f5679b3","/// <reference path=\"../typings/index.d.ts\" />\n/// <reference path=\"./Temasys.d.ts\" />\n\"use strict\";\nvar WebRTCLib_1 = require('./WebRTCLib');\nexports.WebRTCLib = WebRTCLib_1.WebRTCLib;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.ts\n// module id = 1\n// module chunks = 0","\"use strict\";\nvar ws_jms_lib_echyzen_1 = require('ws-jms-lib-echyzen');\n// var test = new WebRTCLib('ws://yourserveraddress:8001', 'myTopic', 'userID');\n// test.createStream({\"video\": true, \"audio\":false}, function(stream){\n//   // get local stream for manipulation\n//   let local = document.getElementById('localVideo');\n//   WebRTCLib.attachStream(stream, local);\n// } , function(stream){\n//   // get local stream for manipulation\n//   let local = document.getElementById('localVideo');\n//   WebRTCLib.attachStream(stream, local);\n// });\n// class ConfigWebRTC {\n//   constructor(public url: string, public channelID: string, public userID: string) { };\n//   static RESPONSE = \"response_web_rtc\";\n//   static REQUEST = \"request_web_rtc\"; \n//   static ICE_CANDIDATE = \"ice_candidate_web_rtc\";\n// }\n//\"ws-jms-lib-echyzen\": \"0.0.17\"\nvar WebRTCLib = (function () {\n    function WebRTCLib(url, channelID, userID) {\n        var _this = this;\n        this.url = url;\n        this.channelID = channelID;\n        this.userID = userID;\n        this.listTempRemoteIceCandidate = [];\n        this.myRTCPeerConnection = this.getBrowserRTCConnectionObj();\n        this.wsJmsLib = new ws_jms_lib_echyzen_1.wsJmsLib();\n        this.wsJmsLib.connect(url, function () {\n            _this.wsJmsLib.subscribe(channelID, _this.dispatchMessage, _this);\n        });\n    }\n    WebRTCLib.prototype.dispatchMessage = function (message) {\n        var _this = this;\n        message = JSON.parse(message);\n        console.log('dispatchMessage', message);\n        switch (message.type) {\n            case 'request_web_rtc':\n                if (this.userID !== message.user_id) {\n                    console.log('request_web_rtc', message);\n                    this.myRTCPeerConnection.setRemoteDescription(new RTCSessionDescription(message.message), function () {\n                        _this.myRTCPeerConnection.createAnswer(function (myDesc) {\n                            _this.getDescription(myDesc);\n                        }, function (err) { return console.error(err); });\n                    }, function (err) { return console.error(err); });\n                }\n                break;\n            case 'ice_candidate_web_rtc':\n                if (this.userID !== message.user_id) {\n                    console.log('ice_candidate_web_rtc', message);\n                    if (message.message) {\n                        this.listTempRemoteIceCandidate.push(message.message);\n                    }\n                    else {\n                        this.listTempRemoteIceCandidate.forEach(function (remoteIceCandidate) {\n                            _this.myRTCPeerConnection.addIceCandidate(new RTCIceCandidate(remoteIceCandidate));\n                        });\n                    }\n                }\n                break;\n            case 'response_web_rtc':\n                if (this.userID !== message.user_id) {\n                    console.log('response_web_rtc', message);\n                    this.responseWebRTC(message.message);\n                }\n                break;\n            default:\n                break;\n        }\n    };\n    WebRTCLib.prototype.responseWebRTC = function (remoteDesc) {\n        this.myRTCPeerConnection.setRemoteDescription(new RTCSessionDescription(remoteDesc));\n    };\n    WebRTCLib.prototype.getBrowserRTCConnectionObj = function () {\n        var servers = null;\n        var constraints = {\n            'optional': []\n        };\n        if (window.mozRTCPeerConnection) {\n            return new mozRTCPeerConnection(servers, constraints);\n        }\n        else if (window.webkitRTCPeerConnection) {\n            return new webkitRTCPeerConnection(servers, constraints);\n        }\n        else {\n            return new RTCPeerConnection(servers, constraints);\n        }\n    };\n    WebRTCLib.prototype.buildMessage = function (message, type) {\n        return {\n            chatroom_id: this.channelID,\n            user_id: this.userID,\n            type: type,\n            message: message\n        };\n    };\n    WebRTCLib.prototype.sendIceCandidates = function (myRTCIceCandidateEvent) {\n        var lightRTCIceCandidateEvent = null;\n        if (myRTCIceCandidateEvent.candidate) {\n            lightRTCIceCandidateEvent = {\n                sdpMid: myRTCIceCandidateEvent.candidate.sdpMid,\n                sdpMLineIndex: myRTCIceCandidateEvent.candidate.sdpMLineIndex,\n                candidate: myRTCIceCandidateEvent.candidate.candidate\n            };\n        }\n        var message = this.buildMessage(lightRTCIceCandidateEvent, 'ice_candidate_web_rtc');\n        this.wsJmsLib.send(JSON.stringify(message), this.channelID, function () { });\n    };\n    WebRTCLib.prototype.getDescription = function (myDesc) {\n        var _this = this;\n        this.myRTCPeerConnection.setLocalDescription(myDesc, function () {\n            var message = _this.buildMessage(myDesc, 'response_web_rtc');\n            _this.wsJmsLib.send(JSON.stringify(message), _this.channelID, function () { });\n        });\n    };\n    ////////////////////////////////////////////////////////////////\n    WebRTCLib.prototype.createStream = function (userMediaStream, getLocalStream, getRemoteStream) {\n        var _this = this;\n        navigator.getUserMedia(userMediaStream, function (myStream) {\n            _this.myRTCPeerConnection.addStream(myStream);\n            getLocalStream(myStream);\n            _this.myRTCPeerConnection.onicecandidate = function (myRTCIceCandidateEvent) {\n                _this.sendIceCandidates(myRTCIceCandidateEvent);\n            };\n            _this.myRTCPeerConnection.onaddstream = function (evt) {\n                getRemoteStream(evt.stream);\n            };\n        }, function (err) { return console.error(err); });\n    };\n    WebRTCLib.prototype.createOffer = function () {\n        var _this = this;\n        this.myRTCPeerConnection.createOffer(function (myDesc) {\n            _this.myRTCPeerConnection.setLocalDescription(myDesc);\n            var message = _this.buildMessage(myDesc, 'request_web_rtc');\n            _this.wsJmsLib.send(JSON.stringify(message), _this.channelID, function () { });\n        }, function (err) { console.error(err); });\n    };\n    WebRTCLib.attachStream = function (mediaStream, HTMLElement) {\n        HTMLElement = attachMediaStream(HTMLElement, mediaStream);\n    };\n    return WebRTCLib;\n}());\nexports.WebRTCLib = WebRTCLib;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/WebRTCLib.ts\n// module id = 2\n// module chunks = 0","\"use strict\";\nvar WsJMSLib_1 = require('./WsJMSLib');\nexports.wsJmsLib = WsJMSLib_1.wsJmsLib;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ws-jms-lib-echyzen/dist/index.js\n// module id = 3\n// module chunks = 0","/// <reference path=\"./wsJMSKaazing.d.ts\" />\n\"use strict\";\nvar wsJmsLib = (function () {\n    //////////////////////////////////////////////////////////////////////////////////\n    function wsJmsLib() {\n        this.connection = {};\n        this.session = {};\n        this.consumers = {};\n    }\n    wsJmsLib.prototype.createDestination = function (name) {\n        var reTopic = new RegExp(wsJmsLib.baseTopicUrl, 'i');\n        var reQueue = new RegExp(wsJmsLib.baseQueueUrl, 'i');\n        if (name.match(reTopic)) {\n            return this.session.createTopic(name);\n        }\n        else if (name.match(reQueue)) {\n            return this.session.createQueue(name);\n        }\n        else {\n            throw new Error(\"Destination must start with /topic/ or /queue/\");\n        }\n    };\n    wsJmsLib.prototype.buildMessage = function (message) {\n        var textMessage = this.session.createTextMessage(message);\n        return textMessage;\n    };\n    //////////////////////////////////////////////////////////////////////////////////\n    wsJmsLib.prototype.connect = function (url, callback) {\n        var connectionFactory = new JmsConnectionFactory(url);\n        var that = this;\n        var connectionFuture = connectionFactory.createConnection(function () {\n            try {\n                that.connection = connectionFuture.getValue();\n            }\n            catch (err) {\n                console.error(err);\n            }\n            that.session = that.connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n            that.connection.start(function () {\n                callback();\n            });\n        });\n    };\n    ;\n    wsJmsLib.prototype.subscribe = function (channelName, messageListener, context) {\n        // assuming connection has already been established and started\n        // ideally we need to maintain the state of the connection and throw error\n        // if the controller calls subscribe before connection is established\n        // or after the connection is closed\n        var topic = this.session.createTopic(channelName);\n        var consumer = this.session.createConsumer(topic);\n        this.consumers[channelName] = consumer;\n        consumer.setMessageListener(function (message) {\n            messageListener.call(context, message.getText());\n        });\n    };\n    ;\n    wsJmsLib.prototype.send = function (message, topic, callback) {\n        var dest = this.createDestination(topic);\n        var producer = this.session.createProducer(dest);\n        var textMessage = this.buildMessage(message);\n        try {\n            var future_1 = producer.send(textMessage, function () {\n                if (future_1.exception) {\n                    console.error(future_1.exception);\n                }\n                callback();\n            });\n        }\n        catch (e) {\n            console.error(e);\n        }\n        producer.close();\n    };\n    wsJmsLib.prototype.unsubscribe = function (channelName, callback) {\n        var consumer = this.consumers[channelName];\n        if (consumer) {\n            delete this.consumers[channelName];\n            consumer.close(callback);\n        }\n    };\n    ;\n    wsJmsLib.baseTopicUrl = 'topic';\n    wsJmsLib.baseQueueUrl = 'queue';\n    return wsJmsLib;\n}());\nexports.wsJmsLib = wsJmsLib;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ws-jms-lib-echyzen/dist/WsJMSLib.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}